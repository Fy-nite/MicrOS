<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.Finite</groupId>
    <artifactId>MicrOS</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>20</maven.compiler.source>
        <maven.compiler.target>20</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-jar-plugin.mainClass>org.Finite.MicrOS.Main</maven-jar-plugin.mainClass>
        <maven-jar-plugin.jarName>MicrOS</maven-jar-plugin.jarName>
        <lwjgl.version>3.3.3</lwjgl.version>
        <jna.version>5.13.0</jna.version>
        <lwjgl.natives.windows>natives-windows</lwjgl.natives.windows>
        <lwjgl.natives.linux>natives-linux</lwjgl.natives.linux>
        <lwjgl.natives.macos>natives-macos</lwjgl.natives.macos>
        <graalvm.version>23.1.1</graalvm.version>
        <native.maven.plugin.version>0.9.19</native.maven.plugin.version>
        <javafx.version>17</javafx.version>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <descriptorRefs>
                        <!--                        specify the version as descriptor ref at somepoint-->
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>org.Finite.MicrOS.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.simpligility.maven.plugins</groupId>
                <artifactId>android-maven-plugin</artifactId>
                <version>4.6.0</version>
                <configuration>
                    <sdk>
                        <platform>28</platform>
                    </sdk>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>${native.maven.plugin.version}</version>
                <configuration>
                    <imageName>micros</imageName>
                    <mainClass>org.Finite.MicrOS.Main</mainClass>
                    <buildArgs>
                        <buildArg>--no-fallback</buildArg>
                        <!-- GUI Support -->
                        <buildArg>-Djava.awt.headless=false</buildArg>
                        <buildArg>--enable-all-security-services</buildArg>
                        <buildArg>--allow-incomplete-classpath</buildArg>
                        <!-- Runtime initialization -->
                        <buildArg>--initialize-at-run-time=java.awt,javax.swing,sun.awt,sun.java2d,sun.font,com.sun.glass.utils.NativeLibLoader</buildArg>
                        <!-- Tracing and debugging -->
                        <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                        <buildArg>-H:+PrintClassInitialization</buildArg>
                        <buildArg>-H:Log=registerResource:</buildArg>
                        <!-- Agent support -->
                        <buildArg>-H:+AllowVMInspection</buildArg>
                        <!-- JavaFX Support -->
                     
                        <buildArg>--initialize-at-build-time=com.sun.javafx.runtime.VersionInfo</buildArg>
                        <buildArg>-H:IncludeResources=.*/.*\\.css$</buildArg>
                        <buildArg>-H:IncludeResources=.*/.*\\.properties$</buildArg>
                        <buildArg>-H:ReflectionConfigurationFiles=src/main/resources/META-INF/native-image/reflect-config.json</buildArg>
                        <!-- Additional JavaFX configurations -->
                        <buildArg>--enable-url-protocols=http,https</buildArg>
                        <!-- Native library handling -->
                        <buildArg>--link-at-build-time</buildArg>
                        <buildArg>-H:+StaticExecutableWithDynamicLibC</buildArg>
                        <buildArg>--enable-native-access=ALL-UNNAMED</buildArg>
              

                        <buildArg>--initialize-at-build-time=com.sun.javafx.font.freetype.OSPango</buildArg>
                        <buildArg>--initialize-at-build-time=com.sun.javafx.font.freetype.OSFreetype</buildArg>
                        <!-- Link native libraries -->
                        <buildArg>-H:CLibraryPath=/usr/lib/x86_64-linux-gnu</buildArg>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>

        <dependency>
            <groupId>org.tomlj</groupId>
            <artifactId>tomlj</artifactId>
            <version>1.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.jcommander</groupId>
            <artifactId>jcommander</artifactId>
            <version>2.0</version>
        </dependency>

        <dependency>
            <groupId>org.Finite</groupId>
            <artifactId>MASM</artifactId>
            <version>0.01</version>
        </dependency>

        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.81</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>17</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>17</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>17</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20231013</version>
        </dependency>
        
        <!-- JCommander for CLI argument parsing -->
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.82</version>
        </dependency>
        <!-- JNA for native access -->
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>${jna.version}</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>${jna.version}</version>
        </dependency>
        
        
        <!-- JavaFX Platform-specific dependencies -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
            <classifier>linux</classifier>
        </dependency>

        
        <!-- FlatLaf Dependencies -->
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf-intellij-themes</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf-extras</artifactId>
            <version>3.2.1</version>
        </dependency>
    </dependencies>
    <profiles>
        
        <profile>
            <id>windows-profile</id>
            <activation>
                <os><family>windows</family></os>
            </activation>
        
        </profile>
        <profile>
            <id>linux-profile</id>
            <activation>
                <os><family>unix</family></os>
            </activation>
    
        </profile>
        <profile>
            <id>macos-profile</id>
            <activation>
                <os><family>mac</family></os>
            </activation>

        </profile>
        <profile>
            <id>native-linux</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <imageName>micros-linux</imageName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native-windows</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <imageName>micros-windows</imageName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <name>MicrOS</name>
    <description>Welcome to MicrOS!
a welcoming enviroment to MicroAssembly Programming inside java</description>
</project>